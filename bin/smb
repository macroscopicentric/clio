#!/usr/bin/env ruby
# frozen_string_literal: true

lib = File.expand_path('../lib', __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'anyway_config'
require 'thor'
require 'yaml'
require 'clio/twitter'

module Clio
  # CLI commands
  class CLI < Thor
    desc 'backup', 'Back up all configured social media profiles'
    attr_accessor :config, :config_filename

    def initialize(*args)
      super
      @config_filename = @options['config']
    # Define valid config fields using anyway_config.
    # Pros: more testable, more explicit, attribute-based
    # access rather than nested hashes.
      @config = Anyway::Config.for(:user)
    end

    def backup
      # Clio.back_up
      puts 'this is backup'
    end
  end
end

Clio::CLI.start(ARGV)
